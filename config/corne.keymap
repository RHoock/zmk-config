/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define QWERTY 1
#define TAP 2
#define BUTTON 3
#define NAV 4
#define MEDIA 5
#define NUM 6
#define SYM 7
#define FUN 8

/ {
        keymap {
                compatible = "zmk,keymap";

                base_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &trans &kp Q         &kp W       &kp F        &kp P          &kp B           &kp J    &kp L         &kp U       &kp Y       &kp SQT          &trans
   &trans &mt LGUI A    &mt LALT R  &mt LCTRL S  &mt LSHFT T    &kp G           &kp M    &mt RSHIFT N  &mt RCTL E  &mt RALT I  &mt RGUI O       &trans
   &trans &lt BUTTON Z  &kp X       &kp C        &kp D          &kp V           &kp K    &kp H         &kp COMMA   &kp DOT     &lt BUTTON FSLH  &trans
                                    &lt NUM ESC  &lt NAV SPACE  &lt MEDIA TAB   &kp RET  &lt SYM BSPC  &lt FUN DEL
                        >;
                };

                qwerty_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans  &kp Q         &kp W  &kp E     &kp R   &kp T       &kp Y    &kp U   &kp I      &kp O    &kp P            &trans
   &trans  &kp A         &kp S  &kp D     &kp F   &kp G       &kp H    &kp J   &kp K      &kp L    &kp SQT          &trans
   &trans  &lt BUTTON Z  &kp X  &kp C     &kp V   &kp B       &kp N    &kp M   &kp COMMA  &kp DOT  &lt BUTTON FSLH  &trans
                                &kp LGUI  &trans  &kp SPACE   &kp RET  &trans  &kp RALT
                        >;
                };

                tap_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans    &kp Q  &kp W  &kp F    &kp P      &kp B     &kp J    &kp L     &kp U      &kp Y    &kp SQT   &trans
   &trans    &kp A  &kp R  &kp S    &kp T      &kp G     &kp M    &kp N     &kp E      &kp I    &kp O     &trans
   &to BASE  &kp Z  &kp X  &kp C    &kp D      &kp V     &kp K    &kp H     &kp COMMA  &kp DOT  &kp FSLH  &trans
                           &kp ESC  &kp SPACE  &kp TAB   &kp RET  &kp BSPC  &kp DEL
                        >;
                };

                button_layer {
                        bindings = <
   &trans  &kp C_AC_UNDO  &kp C_AC_CUT  &kp C_AC_COPY  &kp C_AC_PAST  &kp C_AC_REDO   &kp C_AC_REDO   &trans         &kp C_AC_COPY  &kp C_AC_CUT  &kp C_AC_UNDO  &trans
   &trans  &kp LGUI       &kp LALT      &kp LCTRL      &kp LSHIFT     &trans          &trans          &kp RSHIFT     &kp RCTRL      &kp RALT      &kp RGUI       &trans
   &trans  &kp C_AC_UNDO  &kp C_AC_CUT  &kp C_AC_COPY  &kp C_AC_PAST  &kp C_AC_REDO   &kp C_AC_REDO   &kp C_AC_PAST  &kp C_AC_COPY  &kp C_AC_CUT  &kp C_AC_UNDO  &trans
                                        &kp LGUI       &trans         &kp SPACE       &kp RET         &trans         &kp RALT
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans  &trans    &to TAP   &to QWERTY  &to BASE    &trans      &kp C_AC_REDO  &kp C_AC_PAST  &kp C_AC_COPY  &kp C_AC_CUT  &kp C_AC_UNDO  &trans
   &trans  &kp LGUI  &kp LALT  &kp LCTRL   &kp LSHIFT  &trans      &kp CAPS       &kp LEFT       &kp DOWN       &kp UP        &kp RIGHT      &trans
   &trans  &trans    &kp RALT  &to NUM     &to NAV     &trans      &kp INS        &kp HOME       &kp PG_DN      &kp PG_UP     &kp END        &trans
                               &kp LGUI    &trans      &kp SPACE   &kp RET        &trans         &kp RALT
                        >;
                };

                media_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans  &trans    &to TAP   &to QWERTY  &to BASE    &trans      &trans      &trans      &trans        &trans        &trans      &trans
   &trans  &kp LGUI  &kp LALT  &kp LCTRL   &kp LSHIFT  &trans      &trans      &kp C_PREV  &kp C_VOL_UP  &kp C_VOL_DN  &kp C_NEXT  &trans
   &trans  &trans    &kp RALT  &to NUM     &to MEDIA   &trans      &trans      &trans      &trans        &trans        &trans      &trans
                               &kp LGUI    &trans      &kp SPACE   &kp C_STOP  &kp C_PP    &kp C_MUTE
                        >;
                };

                num_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans  &trans    &to TAP   &to QWERTY  &to BASE    &trans      &kp KP_MULTIPLY  &kp KP_N7  &kp KP_N8   &kp KP_N9  &kp KP_DIVIDE  &trans
   &trans  &kp LGUI  &kp LALT  &kp LCTRL   &kp LSHIFT  &trans      &kp KP_PLUS      &kp KP_N4  &kp KP_N5   &kp KP_N6  &kp KP_MINUS   &trans
   &trans  &trans    &kp RALT  &to NUM     &to MEDIA   &trans      &trans           &kp KP_N1  &kp KP_N2   &kp KP_N3  &trans         &trans
                               &kp LGUI    &trans      &kp SPACE   &kp KP_EQUAL     &kp KP_N0  &kp KP_DOT
                        >;
                };

                sym_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans     &kp EXCL  &kp AT      &kp LBRC  &kp RBRC  &kp CARET   &trans   &to BASE    &to QWERTY  &to TAP   &trans    &trans
   &kp TILDE  &kp HASH  &kp AT      &kp LBKT  &kp LBKT  &kp PRCNT   &trans   &kp LSHIFT  &kp LCTRL   &kp LALT  &kp LGUI  &trans
   &trans     &kp DLLR  &kp RA(N5)  &kp LT    &kp GT    &kp BSLH    &trans   &to SYM     &to NUM     &kp RALT  &trans    &trans
                                    &kp LPAR  &kp RPAR  &kp UNDER   &kp RET  &trans      &kp RALT
                        >;
                };

                fun_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans  &kp F9  &kp F10  &kp F11    &kp F12    &kp PSCRN          &trans   &to BASE    &to QWERTY  &to TAP   &trans    &trans
   &trans  &kp F5  &kp F6   &kp F7     &kp F8     &kp SLCK           &trans   &kp LSHIFT  &kp LCTRL   &kp LALT  &kp LGUI  &trans
   &trans  &kp F1  &kp F2   &kp F3     &kp F4     &kp PAUSE_BREAK    &trans   &to FUN     &to NUM     &kp RALT  &trans    &trans
                            &kp K_APP  &kp SPACE  &kp TAB            &kp RET  &trans      &kp RALT
                        >;
                };
        };

        combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&kp ESC>;
        };
    };
};
