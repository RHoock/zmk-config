/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAVSYM 1
#define NUM 2
#define EXP 3

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
        Behaviors {
//            td_mt: tap_dance_mod_tap {
//                compatible = "zmk,behavior-tap-dance";
//                label = "TAP_DANCE_MOD_TAP";
//                #binding-cells = <0>;
//                tapping-term-ms = <200>;
//                bindings = <&mt LSHIFT CAPSLOCK>, <&kp LCTRL>;
//            };
//
//            td_ly: tap_dance_layer {
//                compatible = "zmk,behavior-tap-dance";
//                label = "TAP_DANCE_MO_LAYER";
//                #binding-cells = <0>;
//                tapping-term-ms = <200>;
//                bindings = <&mo>, <&to>;
//            };
//
              td_caps: tap_dance_caps {
                  compatible = "zmk,behavior-tap-dance";
                  label = "TAP_DANCE_CAPSLCK";
                  #binding-cells = <0>;
                  tapping-term-ms = <200>;
                  bindings = <&caps_word>, <&kp CAPS>;
              };

              ae: a_ae {
                  compatible = "zmk,behavior-mod-morph";
                  label = "CHANGE_A_TO_AE";
                  #binding-cells = <0>;
                  bindings = <&kp A>, <&kp RA(Q)>;
                  mods = <(MOD_LALT)>;
              };

              oe: o_oe {
                  compatible = "zmk,behavior-mod-morph";
                  label = "CHANGE_O_TO_OE";
                  #binding-cells = <0>;
                  bindings = <&kp O>, <&kp RA(P)>;
                  mods = <(MOD_LALT)>;
              };

              ue: u_ue {
                  compatible = "zmk,behavior-mod-morph";
                  label = "CHANGE_U_TO_UE";
                  #binding-cells = <0>;
                  bindings = <&kp U>, <&kp RA(Y)>;
                  mods = <(MOD_LALT)>;
              };

              ss: s_ss {
                  compatible = "zmk,behavior-mod-morph";
                  label = "CHANGE_S_TO_SS";
                  #binding-cells = <0>;
                  bindings = <&kp S>, <&kp RA(S)>;
                  mods = <(MOD_LALT)>;
              };

              hm: homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_MODS";
                        #binding-cells = <2>;
                        tapping-term-ms = <150>;
                        quick-tap-ms = <100>;
                        global-quick-tap;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
              };

              hma: homerow_a_mod {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_A_MOD";
                        #binding-cells = <2>;
                        tapping-term-ms = <150>;
                        quick-tap-ms = <100>;
                        global-quick-tap;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&ae>;
              };

              hmo: homerow_o_mod {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_O_MOD";
                        #binding-cells = <2>;
                        tapping-term-ms = <150>;
                        quick-tap-ms = <100>;
                        global-quick-tap;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&oe>;
              };

              hms: homerow_s_mod {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_S_MOD";
                        #binding-cells = <2>;
                        tapping-term-ms = <150>;
                        quick-tap-ms = <100>;
                        global-quick-tap;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&ss>;
              };
        };

        keymap {
                compatible = "zmk,keymap";

                base_layer {
                      bindings = <
   &mo EXP   &kp Q        &kp W       &kp F         &kp P        &kp B       &kp J     &kp L        &ue          &kp Y       &kp SEMI     &kp SQT
   &kp BSLH  &hma LGUI 0  &hm LALT R  &hms LCTRL 0  &hm LSHFT T  &kp G       &kp M     &hm LSHFT N  &hm RCTRL E  &hm LALT I  &hmo LGUI 0  &kp MINUS
   &td_caps  &kp Z        &kp X       &kp C         &kp D        &kp V       &kp K     &kp H        &kp COMMA    &kp DOT     &kp FSLH     &kp GRAVE
                                      &lt NUM TAB   &kp SPACE    &kp ESC     &kp RET   &kp BSPC     &lt NAVSYM DEL
                        >;
                };

                navsym_layer {
                        bindings = <
   &trans     &kp EXCL  &kp AMPS    &kp LBRC  &kp RBRC  &kp CARET    &kp K_REDO   &kp K_UNDO  &kp C_VOL_DN  &kp C_VOL_UP  &trans     &trans
   &kp TILDE  &kp HASH  &kp AT      &kp LBKT  &kp RBKT  &kp PRCNT    &kp K_PASTE  &kp LEFT    &kp DOWN      &kp UP        &kp RIGHT  &trans
   &trans     &kp DLLR  &kp RA(N5)  &kp LT    &kp GT    &kp BSLH     &kp K_CUT    &kp COPY    &kp PG_DN     &kp PG_UP     &trans     &trans
                                    &kp LPAR  &kp RPAR  &kp UNDER    &trans       &trans      &to BASE
                        >;
                };

                num_layer {
                        bindings = <
   &trans  &kp F9  &kp F10  &kp F11   &kp F12  &kp RC(X)      &kp KP_MULTIPLY  &kp N7  &kp N8      &kp N9  &kp KP_DIVIDE  &trans
   &trans  &kp F5  &kp F6   &kp F7    &kp F8   &kp RC(C)      &kp KP_PLUS      &kp N4  &kp N5      &kp N6  &kp KP_MINUS   &trans
   &trans  &kp F1  &kp F2   &kp F3    &kp F4   &kp RC(V)      &trans           &kp N1  &kp N2      &kp N3  &trans         &trans
                            &to BASE  &trans   &trans         &kp EQUAL        &kp N0  &kp KP_DOT
                        >;
		
                };

                exp_layer {
                        bindings = <
   &trans  &trans  &trans        &trans      &trans         &trans       &trans      &trans        &trans        &trans        &trans      &trans
   &trans  &trans  &trans        &trans      &trans         &trans       &trans      &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_PRV    &bt BT_NXT  &trans
   &trans  &trans  &trans        &trans      &trans         &trans       &trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR  &trans
                   &out OUT_USB  &sys_reset  &bootloader    &bootloader  &sys_reset  &out OUT_BLE
                        >;
                };

        };

        combos {
        compatible = "zmk,combos";
        combo_tab {
            timeout-ms = <50>;
            key-positions = <14 15 16>;
            bindings = <&kp TAB>;
        };

        combo_del {
            timeout-ms = <50>;
            key-positions = <19 20 21>;
            bindings = <&kp DEL>;
        };

        combo_esc {
            timeout-ms = <20>;
            key-positions = <15 16>;
            bindings = <&kp ESC>;
        };

        combo_RET {
            timeout-ms = <20>;
            key-positions = <20 21>;
            bindings = <&kp RET>;
        };

        combo_bspc {
            timeout-ms = <20>;
            key-positions = <19 20>;
            bindings = <&kp BSPC>;
        };
    };
};
